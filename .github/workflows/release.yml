on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            binary-name: bing-webserver.exe
            use-cross: true
          - target: x86_64-unknown-linux-musl
            binary-name: bing-webserver
            use-cross: false
          - target: x86_64-unknown-linux-gnu
            binary-name: bing-webserver
            use-cross: false
          - target: i686-unknown-linux-musl
            binary-name: bing-webserver
            use-cross: true
          - target: i686-unknown-linux-gnu
            binary-name: bing-webserver
            use-cross: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: build
          args: -r --target ${{ matrix.target }}
      - name: Debug Directory structure
        run: |
          sudo apt install -y tree
          tree
      - name: Zip Binary
        run: |
          cd target/${{ matrix.target }}/release/
          zip -D bing-webserver-${{ matrix.target }}.zip ${{ matrix.binary-name }}
          mv bing-webserver-${{ matrix.target }}.zip ../../../
      - uses: actions/upload-artifact@v3
        with:
          name: bing-webserver-${{ matrix.target }}
          path: bing-webserver-${{ matrix.target }}.zip
  release:
    name: release to github 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: bing-webserver-x86_64-pc-windows-gnu
      - uses: actions/download-artifact@v3
        with:
          name: bing-webserver-x86_64-unknown-linux-musl
       - uses: actions/download-artifact@v3
        with:
          name: bing-webserver-x86_64-unknown-linux-gnu
      - uses: actions/download-artifact@v3
        with:
          name: bing-webserver-i686-unknown-linux-musl
      - uses: actions/download-artifact@v3
        with:
          name: bing-webserver-i686-unknown-linux-gnu
      - name: Debug Directory structure
        run: |
          sudo apt install -y tree
          tree
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
  release-docker:
    name: release docker image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: bing-webserver-x86_64-unknown-linux-gnu
      - name: Unzip Binary
        run: |
          unzip bing-webserver-x86_64-unknown-linux-gnu.zip
          ls -lha
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            3n3a/bing-webserver
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=sha
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=3n3a/bing-webserver:latest
          cache-to: type=inline
